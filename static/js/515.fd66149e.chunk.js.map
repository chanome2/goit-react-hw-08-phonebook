{"version":3,"file":"static/js/515.fd66149e.chunk.js","mappings":"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","sources":["redux/filter/filterSelector.js","redux/contacts/contactsSelector.js","components/ContactForm/ContactForm.jsx","components/Filter/Filter.jsx","components/ContactList/ContactListItem/ContactListItem.jsx","components/Loader/Loader.jsx","components/ContactList/ContactList.jsx","pages/ContactsPage/ContactsPage.jsx"],"sourcesContent":["export const selectFilter = state => state.filter;","import { createSelector } from \"@reduxjs/toolkit\";\nimport { selectFilter } from \"../filter/filterSelector\";\n\nexport const selectContacts = state => state.contacts.items;\nexport const selectError = state => state.contacts.error;\nexport const selectIsLoading = state => state.contacts.isLoading;\n\nexport const selectFilteredContacts = createSelector(\n    //array of input selectors\n    [selectContacts, selectFilter],\n    //transducer function\n    (contacts, filter) => {\n        return contacts.filter(({ name }) =>\n            name.toLowerCase().includes(filter.toLowerCase())\n        );\n    }\n);\n\n","import { useState } from \"react\";\n// import css from \"./ContactForm.module.css\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { addContact } from \"../../redux/contacts/contactsOperation\";\nimport { selectContacts } from \"../../redux/contacts/contactsSelector\";\nimport { MuiTelInput } from \"mui-tel-input\";\nimport { Box, TextField, Button, FormControl } from \"@mui/material\";\nimport PersonAddIcon from '@mui/icons-material/PersonAdd';\n\n\nexport const ContactForm = () => {\n    const dispatch = useDispatch();\n    const contacts = useSelector(selectContacts);\n\n    const [name, setName] = useState(\"\");\n    const [number, setNumber] = useState(\"\");\n\n    const nameChangeEvent = e => {\n        setName(e.target.value);\n    };\n\n    const numberChangeEvent = e => {\n        setNumber(e);\n    };\n\n    const addContactSubmit = e => {\n        e.preventDefault();\n\n        if (name.trim() === \"\" || number.trim() === \"\") {\n            return;\n        }\n\n        const existingContact = contacts.find(contact => contact.name.toLowerCase() === name.toLowerCase());\n\n        if (existingContact) {\n            alert(`${name} is already in Phonebook!`);\n            return;\n        }\n\n        //dispatch(addContact({ name: name, number: number }));\n        dispatch(addContact({ name, number }));\n\n        //reset form fields upon submitting\n        setName(\"\");\n        setNumber(\"\");\n    };\n\n    return (\n        <>\n        <Box sx={{marginTop: \"100px\"}}>\n        <FormControl sx={{display: \"flex\", gap: \"20px\", marginTop: \"50px\"}}>\n            \n            <TextField\n                sx={{backgroundColor: \"#fffff699\"}}\n                variant=\"outlined\"\n                label=\"Name\"\n                value={name}\n                onChange={nameChangeEvent}\n                pattern=\"^[a-zA-Zа-яА-Я]+(([' \\-][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n                title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan.\"\n                required\n                />\n\n            <MuiTelInput\n                sx={{backgroundColor: \"#fffff899\"}}\n                value={number}\n                defaultCountry=\"UA\"\n                onChange={numberChangeEvent} />\n        \n            <Button\n                variant=\"contained\"\n                sx={{ alignSelf: \"center\" }}\n                        onClick={addContactSubmit} >Add Contact&nbsp;\n            <PersonAddIcon />\n            </Button>\n                    \n        </FormControl>\n        </Box>\n    </>\n    )\n};\n","// import css from \"./Filter.module.css\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { setFilter } from \"../../redux/filter/filterSlice\";\nimport { selectFilter } from \"../../redux/filter/filterSelector\";\nimport { Box, InputAdornment, TextField, Typography } from \"@mui/material\";\nimport ContactPhoneIcon from '@mui/icons-material/ContactPhone';\n\nexport const Filter = () => {\n    const dispatch = useDispatch();\n    const filter = useSelector(selectFilter);\n\n    //filter name based on the search keyword\n    const handleFilterChange = e => {\n        dispatch(setFilter(e.target.value));\n        \n    };\n\n    return (\n        <>\n            <Box sx={{color: \"white\", display: \"flex\", flexDirection: \"column\", justifyContent: \"center\", marginTop: \"15px\"}}>\n            \n            <Typography variant=\"h6\" sx={{display: \"flex\", justifyContent: \"center\"}}>Find Contacts by Name</Typography>\n                <TextField\n                    sx={{ backgroundColor: \"#fdf6f658\" }}\n                    variant=\"outlined\"\n                    label=\"Enter name to search...\"\n                    type=\"text\"\n                    name=\"filter\"\n                    value={filter}\n                    onChange={handleFilterChange}\n                InputProps={{endAdornment: (\n                    <InputAdornment position=\"end\">\n                    <ContactPhoneIcon />\n                    </InputAdornment>\n                )}}\n                    />\n            </Box>\n        </>\n    );\n};","// import css from \"./ContactListItem.module.css\";\nimport PropTypes from \"prop-types\";\nimport { useDispatch } from \"react-redux\";\nimport { deleteContact, updateContact } from \"../../../redux/contacts/contactsOperation\";\nimport { Button, Modal, Box, FormControl, TextField, Typography, InputAdornment, ListItem, ListItemText, ListItemButton, List } from \"@mui/material\";\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport EditIcon from '@mui/icons-material/Edit';\nimport ContactPhoneIcon from '@mui/icons-material/ContactPhone';\nimport { useState } from \"react\";\nimport { MuiTelInput } from \"mui-tel-input\";\n\nexport const ContactListItem = ({ filteredContact }) => {\n    \n    const dispatch = useDispatch();\n    const [name, setName] = useState(filteredContact.name);\n    const [number, setNumber] = useState(filteredContact.number);\n    const [onOpen, setOnOpen] = useState(false);\n\n    const style = {\n    position: 'absolute',\n    top: '50%',\n        left: '50%',\n    transform: 'translate(-50%, -50%)',\n    width: 400,\n    bgcolor: '#69587bee',\n    border: '1px solid #000',\n    boxShadow: 24,\n    borderRadius: 2,\n    p: 4,\n    };\n\n    const nameChangeEvent = e => {\n        setName(e.target.value);\n    }; \n\n    const numberChangeEvent = e => {\n        setNumber(e);\n    };\n\n    //handleDelete method\n    const handleDelete = () => {\n        dispatch(deleteContact(filteredContact.id));\n    };\n\n    // handleEdit method\n    const handleEdit = () => {\n        setOnOpen(!onOpen);\n        \n    };\n\n    const handleUpdate = () => {\n        setOnOpen(!onOpen);\n        dispatch(updateContact({ id: filteredContact.id, name, number }));\n    };\n\n    return (\n        <>\n            <Box sx={{ color: \"white\", border: \"1px solid white\", padding: \"0\"}}>\n        <List sx={{padding: \"0\", paddingLeft: \"10px\"}}>\n                    <ListItem sx={{gap: \"10px\" }}\n                        disablePadding>        \n        {/* <li className={css.contactListItem}> */}\n                    <ListItemText primary={filteredContact.name} />\n                        \n                        {/* {filteredContact.name}:</ListItemText> */}\n                        \n            <ListItemText primary={filteredContact.number}>{filteredContact.number}</ListItemText>\n            \n            <ListItemButton sx={{gap: \"10px\", display: \"flex\", justifyContent: \"flex-end\" }}>\n            <Button variant=\"contained\" onClick={handleDelete}>\n                <DeleteIcon />\n            </Button>\n            <Button variant=\"contained\" onClick={handleEdit}>Edit\n                <EditIcon />\n            </Button></ListItemButton>\n            \n            \n<Modal\n    open={onOpen}\n    onClose={false}\n    aria-labelledby=\"modal-modal-title\"\n    aria-describedby=\"modal-modal-description\"\n>\n        \n    <Box sx={style}>\n        <Typography sx={{color: \"white\", display: \"flex\", justifyContent: \"center\"}} variant=\"h5\">Update Contact</Typography>\n        \n        <FormControl sx={{ display: \"flex\", gap: \"20px\", marginTop: \"50px\" }}>\n                                \n        <TextField \n            variant=\"outlined\"\n            label=\"Name\"\n            value={name}\n            onChange={nameChangeEvent}\n            InputProps={{endAdornment: (\n            <InputAdornment position=\"end\">\n            <ContactPhoneIcon />\n            </InputAdornment>\n            )}}                       \n        />\n\n        <MuiTelInput value={number} onChange={numberChangeEvent} />\n                            \n        <Button variant=\"contained\" sx={{alignSelf: \"center\"}} onClick={handleEdit} >Cancel</Button>\n        <Button variant=\"contained\" sx={{ alignSelf: \"center\" }} type=\"submit\" onClick={handleUpdate}>&nbsp;&nbsp;Save&nbsp;&nbsp;&nbsp;</Button> \n        </FormControl>\n    </Box>\n</Modal>\n\n                {/* </li> */}\n            \n            </ListItem></List>\n        </Box>\n        </>\n    );\n};\n\nContactListItem.propTypes = {\n    filteredContact: PropTypes.object.isRequired,\n};","import { DNA } from \"react-loader-spinner\";\n\n//https://mhnpd.github.io/react-loader-spinner/docs/intro\nexport const Loader = () => {\n\n    return <DNA\n        visible={true}\n        height=\"80\"\n        width=\"80\"\n        ariaLabel=\"dna-loading\"\n        wrapperStyle={{}}\n        wrapperClass=\"dna-wrapper\"\n    />\n};","import { useEffect } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { useSelector } from \"react-redux\";\n//prettier-ignore\nimport { selectFilteredContacts, selectError, selectIsLoading } from \"../../redux/contacts/contactsSelector\";\nimport { fetchContacts } from \"../../redux/contacts/contactsOperation\";\nimport { ContactListItem } from \"./ContactListItem/ContactListItem\";\nimport { Loader } from \"components/Loader/Loader\";\n\nexport const ContactList = () => {\n    const filteredContacts = useSelector(selectFilteredContacts);\n    const error = useSelector(selectError);\n    const isLoading = useSelector(selectIsLoading);\n\n    const dispatch = useDispatch();\n\n    useEffect(() => {\n        dispatch(fetchContacts());\n    }, [dispatch]);\n\n    return (\n        <ul style={{padding: \"0\", backgroundColor: \"#62487bae\"}}>\n            {/*if loading and not error, show Loader */}\n            {isLoading && !error && <Loader />}\n\n            {/* if not loading, not error and filtered contacts is empty, show warning */}\n            {!isLoading && !error && filteredContacts.length === 0 && (\n                <p style={{ color: \"white\", display: \"flex\", justifyContent: \"center\" }} >Phonebook is empty, please add a contact🤗</p>\n            )}\n\n            {/* if not loading, not error and have at least 1 filtered contact, show ContactListItem */}     \n            {!isLoading && !error && filteredContacts.length > 0 && filteredContacts.map(filteredContact => (\n                <ContactListItem\n                    key={filteredContact.id}\n                    filteredContact={filteredContact}\n                />\n            ))}\n        </ul>\n    );\n};","import { Helmet, HelmetProvider } from \"react-helmet-async\";\nimport { ContactForm } from \"components/ContactForm/ContactForm\";\nimport { Filter } from \"components/Filter/Filter\";\nimport { ContactList } from \"components/ContactList/ContactList\";\nimport { Box, Typography } from \"@mui/material\";\n\nconst ContactsPage = () => {\n    return (\n        <HelmetProvider>\n            <Helmet>\n                <title>Phonebook</title>\n            </Helmet>\n            <Box sx={{ marginTop: \"100px\" }} >\n                <ContactForm />\n            </Box>\n\n            <Box sx={{ marginTop: \"50px\" }}>\n                <Typography sx={{display: \"flex\", color: \"Background\", justifyContent: \"center\"}} variant=\"h5\">Contacts</Typography>\n            \n                <Filter />\n            </Box>\n            \n            <Box>\n                <ContactList />\n            </Box>\n        </HelmetProvider>\n    );\n};\n\nexport default ContactsPage;"],"names":["selectFilter","state","filter","selectContacts","contacts","items","selectError","error","selectIsLoading","isLoading","selectFilteredContacts","createSelector","_ref","name","toLowerCase","includes","ContactForm","dispatch","useDispatch","useSelector","_useState","useState","_useState2","_slicedToArray","setName","_useState3","_useState4","number","setNumber","_jsx","_Fragment","children","Box","sx","marginTop","_jsxs","FormControl","display","gap","TextField","backgroundColor","variant","label","value","onChange","e","target","pattern","title","required","MuiTelInput","defaultCountry","Button","alignSelf","onClick","preventDefault","trim","find","contact","alert","concat","addContact","PersonAddIcon","Filter","color","flexDirection","justifyContent","Typography","type","setFilter","InputProps","endAdornment","InputAdornment","position","ContactPhoneIcon","ContactListItem","filteredContact","_useState5","_useState6","onOpen","setOnOpen","handleEdit","border","padding","List","paddingLeft","ListItem","disablePadding","ListItemText","primary","ListItemButton","deleteContact","id","DeleteIcon","EditIcon","Modal","open","onClose","top","left","transform","width","bgcolor","boxShadow","borderRadius","p","updateContact","Loader","DNA","visible","height","ariaLabel","wrapperStyle","wrapperClass","ContactList","filteredContacts","useEffect","fetchContacts","style","length","map","HelmetProvider","Helmet"],"sourceRoot":""}